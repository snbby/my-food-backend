services:
  server:
    build:
      context: .
      dockerfile: deploy/server.Dockerfile
    command: >
      gunicorn myfood.wsgi:application
      --name myfood
      --bind 0.0.0.0:8000
      --log-level info
    ports:
      - "8000:8000"
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - /var/log/server_logs/:/app/.logs/
      - static_data:/app/django-static/
    restart: always

  tests:
    build:
      context: .
      dockerfile: deploy/server.Dockerfile
    command:
      - pytest
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"

  caddy:
    image: caddy:2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data   
      - static_data:/srv/static/ 
    depends_on:
      - server

  cmd_migrations:
    build:
      context: .
      dockerfile: deploy/server.Dockerfile
    command:
      - python manage.py migrate
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"

  cmd_food_to_db:
    build:
      context: .
      dockerfile: deploy/server.Dockerfile
    command:
      - python manage.py food_to_db
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"


  cmd_server_health:
    build:
      context: .
      dockerfile: deploy/server.Dockerfile
    command:
      - python manage.py server_health
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  caddy_data:
  static_data: